{"expireTime":9007200850557180000,"key":"transformer-remark-markdown-html-ast-515eee2b8e3ba5d939f8861242d13c27-gatsby-remark-katexgatsby-remark-imagesgatsby-remark-responsive-iframegatsby-remark-copy-linked-filesgatsby-remark-smartypantsgatsby-remark-prismjs-","val":{"type":"root","children":[{"type":"raw","value":"<style>\n  .image-wrapper{\n    text-align: center;\n    display: block;\n  }\n</style>","position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":6,"column":9,"offset":82}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Lattice paths","position":{"start":{"line":8,"column":5,"offset":88},"end":{"line":8,"column":18,"offset":101}}}],"position":{"start":{"line":8,"column":1,"offset":84},"end":{"line":8,"column":18,"offset":101}}},{"type":"text","value":"\n"},{"type":"element","tagName":"blockquote","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Starting in the top left corner of a 2×2 grid, and only being able to move to the right and down, there are exactly 6 routes to the bottom right corner.","position":{"start":{"line":9,"column":2,"offset":103},"end":{"line":9,"column":154,"offset":255}}},{"type":"raw","value":"<br/>","position":{"start":{"line":9,"column":154,"offset":255},"end":{"line":9,"column":159,"offset":260}}},{"type":"raw","value":"<br/>","position":{"start":{"line":9,"column":159,"offset":260},"end":{"line":9,"column":164,"offset":265}}},{"type":"text","value":"\n","position":{"start":{"line":9,"column":164,"offset":265},"end":{"line":10,"column":1,"offset":266}}},{"type":"raw","value":"<span class=\"image-wrapper\">","position":{"start":{"line":10,"column":1,"offset":266},"end":{"line":10,"column":29,"offset":294}}},{"type":"raw","value":"<img src=\"https://projecteuler.net/project/images/p015.png\">","position":{"start":{"line":10,"column":29,"offset":294},"end":{"line":10,"column":90,"offset":355}}},{"type":"raw","value":"</span>","position":{"start":{"line":10,"column":90,"offset":355},"end":{"line":10,"column":97,"offset":362}}},{"type":"raw","value":"<br/>","position":{"start":{"line":10,"column":97,"offset":362},"end":{"line":10,"column":102,"offset":367}}},{"type":"raw","value":"<br/>","position":{"start":{"line":10,"column":102,"offset":367},"end":{"line":10,"column":107,"offset":372}}},{"type":"text","value":"\nHow many such routes are there through a 20×20 grid?","position":{"start":{"line":10,"column":107,"offset":372},"end":{"line":11,"column":54,"offset":426}}}],"position":{"start":{"line":9,"column":2,"offset":103},"end":{"line":11,"column":54,"offset":426}}},{"type":"text","value":"\n"}],"position":{"start":{"line":9,"column":1,"offset":102},"end":{"line":11,"column":54,"offset":426}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Recursive:","position":{"start":{"line":13,"column":1,"offset":428},"end":{"line":13,"column":11,"offset":438}}}],"position":{"start":{"line":13,"column":1,"offset":428},"end":{"line":13,"column":11,"offset":438}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">countRoutes</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">m<span class=\"token punctuation\">,</span> n</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>n <span class=\"token operator\">===</span> <span class=\"token number\">0</span> <span class=\"token operator\">||</span> m <span class=\"token operator\">===</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token function\">countRoutes</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">,</span> n <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token function\">countRoutes</span><span class=\"token punctuation\">(</span>m <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":15,"column":1,"offset":440},"end":{"line":21,"column":4,"offset":582}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Alrighty, slow as a turtle. Let’s look at this for a small m/n and see what we can figure out!","position":{"start":{"line":23,"column":1,"offset":584},"end":{"line":23,"column":95,"offset":678}}},{"type":"raw","value":"<br/>","position":{"start":{"line":23,"column":95,"offset":678},"end":{"line":23,"column":100,"offset":683}}},{"type":"text","value":"\nFor ","position":{"start":{"line":23,"column":100,"offset":683},"end":{"line":24,"column":5,"offset":688}}},{"type":"raw","value":"<code class=\"language-text\">4</code>","position":{"start":{"line":24,"column":5,"offset":688},"end":{"line":24,"column":8,"offset":691}}},{"type":"text","value":" we check the routes of ","position":{"start":{"line":24,"column":8,"offset":691},"end":{"line":24,"column":32,"offset":715}}},{"type":"raw","value":"<code class=\"language-text\">(3,2)</code>","position":{"start":{"line":24,"column":32,"offset":715},"end":{"line":24,"column":39,"offset":722}}},{"type":"text","value":" and ","position":{"start":{"line":24,"column":39,"offset":722},"end":{"line":24,"column":44,"offset":727}}},{"type":"raw","value":"<code class=\"language-text\">(2,3)</code>","position":{"start":{"line":24,"column":44,"offset":727},"end":{"line":24,"column":51,"offset":734}}},{"type":"text","value":" which each in turn call ","position":{"start":{"line":24,"column":51,"offset":734},"end":{"line":24,"column":76,"offset":759}}},{"type":"raw","value":"<code class=\"language-text\">(2,2)</code>","position":{"start":{"line":24,"column":76,"offset":759},"end":{"line":24,"column":83,"offset":766}}},{"type":"text","value":". Recalculation is an enemy here and it multiplies faster than bacteria, so let’s see if the mysticism of ","position":{"start":{"line":24,"column":83,"offset":766},"end":{"line":24,"column":189,"offset":872}}},{"type":"element","tagName":"a","properties":{"href":"https://stackoverflow.com/questions/30386943/how-to-create-a-memoize-function"},"children":[{"type":"text","value":"memoization","position":{"start":{"line":24,"column":190,"offset":873},"end":{"line":24,"column":201,"offset":884}}}],"position":{"start":{"line":24,"column":189,"offset":872},"end":{"line":24,"column":281,"offset":964}}},{"type":"text","value":" can help us ","position":{"start":{"line":24,"column":281,"offset":964},"end":{"line":24,"column":294,"offset":977}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"magic hand wave","position":{"start":{"line":24,"column":295,"offset":978},"end":{"line":24,"column":310,"offset":993}}}],"position":{"start":{"line":24,"column":294,"offset":977},"end":{"line":24,"column":311,"offset":994}}},{"type":"text","value":" away some of that tedium.","position":{"start":{"line":24,"column":311,"offset":994},"end":{"line":24,"column":337,"offset":1020}}}],"position":{"start":{"line":23,"column":1,"offset":584},"end":{"line":24,"column":337,"offset":1020}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">outerCountRoutes</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">m<span class=\"token punctuation\">,</span>n</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> routesArr <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Array</span><span class=\"token punctuation\">(</span>m<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">&lt;=</span>m<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    routesArr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Array</span><span class=\"token punctuation\">(</span>n<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> j<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j<span class=\"token operator\">&lt;=</span>n<span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n      routesArr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">return</span> <span class=\"token function\">countRoutes</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">,</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">function</span> <span class=\"token function\">countRoutes</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">m<span class=\"token punctuation\">,</span> n</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>routesArr<span class=\"token punctuation\">[</span>m<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n      <span class=\"token keyword\">return</span> routesArr<span class=\"token punctuation\">[</span>m<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>n <span class=\"token operator\">===</span> <span class=\"token number\">0</span> <span class=\"token operator\">||</span> m <span class=\"token operator\">===</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n      <span class=\"token keyword\">return</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n    routesArr<span class=\"token punctuation\">[</span>m<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>n<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">countRoutes</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">,</span> n <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token function\">countRoutes</span><span class=\"token punctuation\">(</span>m <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">return</span> routesArr<span class=\"token punctuation\">[</span>m<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>    \n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":26,"column":1,"offset":1022},"end":{"line":47,"column":4,"offset":1500}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":48,"column":1,"offset":1501}}}}