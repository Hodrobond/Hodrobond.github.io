{"expireTime":9007200850441420000,"key":"transformer-remark-markdown-ast-6ab15f65d64d3432e8e582c40134f649-gatsby-remark-prismjs-","val":{"type":"root","children":[{"type":"paragraph","children":[{"type":"text","value":"Wow, two posts in one day. I'm energetic, aren't I?","position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":1,"column":52,"offset":51},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":1,"column":52,"offset":51},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Let's get into problem 2","position":{"start":{"line":3,"column":1,"offset":53},"end":{"line":3,"column":25,"offset":77},"indent":[]}}],"position":{"start":{"line":3,"column":1,"offset":53},"end":{"line":3,"column":25,"offset":77},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Even Fibonacci numbers","position":{"start":{"line":5,"column":5,"offset":83},"end":{"line":5,"column":27,"offset":105},"indent":[]}}],"position":{"start":{"line":5,"column":1,"offset":79},"end":{"line":5,"column":27,"offset":105},"indent":[]}},{"type":"blockquote","children":[{"type":"paragraph","children":[{"type":"text","value":"Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:","position":{"start":{"line":6,"column":2,"offset":107},"end":{"line":6,"column":142,"offset":247},"indent":[]}},{"type":"html","value":"<br/>","position":{"start":{"line":6,"column":142,"offset":247},"end":{"line":6,"column":147,"offset":252},"indent":[]}},{"type":"text","value":"\n1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...","position":{"start":{"line":6,"column":147,"offset":252},"end":{"line":7,"column":39,"offset":291},"indent":[1]}},{"type":"html","value":"<br/>","position":{"start":{"line":7,"column":39,"offset":291},"end":{"line":7,"column":44,"offset":296},"indent":[]}},{"type":"text","value":"\nBy considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.","position":{"start":{"line":7,"column":44,"offset":296},"end":{"line":8,"column":131,"offset":427},"indent":[1]}}],"position":{"start":{"line":6,"column":2,"offset":107},"end":{"line":8,"column":131,"offset":427},"indent":[1,1]}}],"position":{"start":{"line":6,"column":1,"offset":106},"end":{"line":8,"column":131,"offset":427},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"As is the pattern with Project Euler, there are a myriad of ways we can solve this problem.","position":{"start":{"line":10,"column":1,"offset":429},"end":{"line":10,"column":92,"offset":520},"indent":[]}}],"position":{"start":{"line":10,"column":1,"offset":429},"end":{"line":10,"column":92,"offset":520},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The Fibonnaci sequence is generally used to teach recursion. Maybe something along the lines of","position":{"start":{"line":12,"column":1,"offset":522},"end":{"line":12,"column":96,"offset":617},"indent":[]}}],"position":{"start":{"line":12,"column":1,"offset":522},"end":{"line":12,"column":96,"offset":617},"indent":[]}},{"type":"html","lang":"javascript","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">fibonacci</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">n</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n   <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>n <span class=\"token operator\">===</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n     <span class=\"token keyword\">return</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n   <span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n     <span class=\"token keyword\">return</span> <span class=\"token function\">fibonacci</span><span class=\"token punctuation\">(</span>n<span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token function\">fibonacci</span><span class=\"token punctuation\">(</span>n<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":14,"column":1,"offset":619},"end":{"line":22,"column":4,"offset":754},"indent":[1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"or if you're fancy:","position":{"start":{"line":24,"column":1,"offset":756},"end":{"line":24,"column":20,"offset":775},"indent":[]}}],"position":{"start":{"line":24,"column":1,"offset":756},"end":{"line":24,"column":20,"offset":775},"indent":[]}},{"type":"html","lang":"javascript","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">fibonacci</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">n</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>n <span class=\"token operator\">===</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> <span class=\"token number\">1</span> <span class=\"token operator\">:</span> <span class=\"token function\">fibonacci</span><span class=\"token punctuation\">(</span>n<span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token function\">fibonacci</span><span class=\"token punctuation\">(</span>n<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":26,"column":1,"offset":777},"end":{"line":30,"column":4,"offset":878},"indent":[1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Ignoring the call stack issues for larger numbers we can solve using setTimeout, retrieving all of the subsequent fibonacci numbers this way seems...inefficient. If I get the 6th fibonacci number then the 7th, it will recalculate all of the previous numbers.","position":{"start":{"line":32,"column":1,"offset":880},"end":{"line":32,"column":259,"offset":1138},"indent":[]}}],"position":{"start":{"line":32,"column":1,"offset":880},"end":{"line":32,"column":259,"offset":1138},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"I propose an iterative solution. Keeping track of the current and previous fibonacci numbers (I love the ","position":{"start":{"line":34,"column":1,"offset":1140},"end":{"line":34,"column":106,"offset":1245},"indent":[]}},{"type":"link","title":null,"url":"https://en.wikipedia.org/wiki/Sieve_of_Eratosthenes","children":[{"type":"text","value":"Sieve of Eratosthenes","position":{"start":{"line":34,"column":107,"offset":1246},"end":{"line":34,"column":128,"offset":1267},"indent":[]}}],"position":{"start":{"line":34,"column":106,"offset":1245},"end":{"line":34,"column":182,"offset":1321},"indent":[]}},{"type":"text","value":" but it just doesn't cut it here. We won't know the maximum value of the prime we need unless we do some intricate mathematical analysis or by testing to get the value explicitly)","position":{"start":{"line":34,"column":182,"offset":1321},"end":{"line":34,"column":361,"offset":1500},"indent":[]}}],"position":{"start":{"line":34,"column":1,"offset":1140},"end":{"line":34,"column":361,"offset":1500},"indent":[]}},{"type":"html","lang":"javascript","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> maxFibonacciValue <span class=\"token operator\">=</span> <span class=\"token number\">4000000</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> prev <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> current <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> sum <span class=\"token operator\">=</span> current<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> temp<span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//iterative over recursive fibonacci.</span>\n<span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>sum <span class=\"token operator\">&lt;</span> maxFibonacciValue<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n  temp <span class=\"token operator\">=</span> current<span class=\"token punctuation\">;</span>\n  current <span class=\"token operator\">+=</span> prev<span class=\"token punctuation\">;</span>\n  prev <span class=\"token operator\">=</span> temp<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>current <span class=\"token operator\">%</span> <span class=\"token number\">2</span> <span class=\"token operator\">===</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n    sum <span class=\"token operator\">+=</span> current\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">return</span> sum<span class=\"token punctuation\">;</span></code></pre></div>","position":{"start":{"line":36,"column":1,"offset":1502},"end":{"line":51,"column":4,"offset":1791},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"We don't actually have any use for any fibonacci number other than \"is this one even? Let's add it to the sum\" and \"Let's add the last one to this one to get the next one!\".","position":{"start":{"line":53,"column":1,"offset":1793},"end":{"line":53,"column":174,"offset":1966},"indent":[]}}],"position":{"start":{"line":53,"column":1,"offset":1793},"end":{"line":53,"column":174,"offset":1966},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":54,"column":1,"offset":1967}}}}