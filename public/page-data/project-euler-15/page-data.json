{"componentChunkName":"component---src-templates-blog-post-js","path":"/project-euler-15/","result":{"data":{"site":{"siteMetadata":{"title":"Contemplating Imponderables"}},"markdownRemark":{"id":"77760af0-6d72-5352-885c-18f372664c75","excerpt":"Lattice paths Starting in the top left corner of a 2×2 grid, and only being able to move to the right and down, there are exactly 6 routes to the bottom right…","html":"<style>\n  .image-wrapper{\n    text-align: center;\n    display: block;\n  }\n</style>\n<h3>Lattice paths</h3>\n<blockquote>\n<p>Starting in the top left corner of a 2×2 grid, and only being able to move to the right and down, there are exactly 6 routes to the bottom right corner.<br/><br/>\n<span class=\"image-wrapper\"><img src=\"https://projecteuler.net/project/images/p015.png\"></span><br/><br/>\nHow many such routes are there through a 20×20 grid?</p>\n</blockquote>\n<p>Recursive:</p>\n<p>{% highlight javascript %}\nfunction countRoutes(m, n){\nif(n === 0 || m === 0)\nreturn 1;\nreturn countRoutes(m, n - 1) + countRoutes(m - 1, n);\n}\n{% endhighlight %}</p>\n<p>Alrighty, slow as a turtle. Let’s look at this for a small m/n and see what we can figure out!<br/>\nFor <code class=\"language-text\">4</code> we check the routes of <code class=\"language-text\">(3,2)</code> and <code class=\"language-text\">(2,3)</code> which each in turn call <code class=\"language-text\">(2,2)</code>. Recalculation is an enemy here and it multiplies faster than bacteria, so let’s see if the mysticism of <a href=\"https://stackoverflow.com/questions/30386943/how-to-create-a-memoize-function\">memoization</a> can help us <em>magic hand wave</em> away some of that tedium.</p>\n<p>{% highlight javascript %}\nfunction outerCountRoutes(m,n){\nvar routesArr = new Array(m+1);\nfor(var i=0; i&#x3C;=m; i++){\nroutesArr[i] = new Array(n+1);\nfor(var j=0; j&#x3C;=n; j++){\nroutesArr[i][j] = false;\n}\n}\nreturn countRoutes(m,n);</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">function countRoutes(m, n){\n  if(routesArr[m][n])\n    return routesArr[m][n];\n  if(n === 0 || m === 0)\n    return 1;\n  routesArr[m][n] = countRoutes(m, n - 1) + countRoutes(m - 1, n);\n\n  return routesArr[m][n];\n}    </code></pre></div>\n<p>  }\n{% endhighlight %}</p>","frontmatter":{"title":"Let's Solve Project Euler Problem 15","date":"June 27, 2017","description":"Euler Problem 15"}}},"pageContext":{"slug":"/project-euler-15/","previous":{"fields":{"slug":"/project-euler-14/"},"frontmatter":{"title":"Let's Solve Project Euler Problem 14"}},"next":null}},"staticQueryHashes":["1246554614","2841359383"]}